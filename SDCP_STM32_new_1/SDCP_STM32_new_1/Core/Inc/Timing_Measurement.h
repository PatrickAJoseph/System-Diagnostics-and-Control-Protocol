
#ifndef INC_Ticks_H_
#define INC_Ticks_H_

/* This module is used to measure the timing of code execution. The timing measurement unit uses
 * Timer 5 of the micro-controller which is a 32-bit timer to count the ticks of execution. The
 * ticks for Timer 5 is generated by Timer 4. */

#include "main.h"

volatile uint8_t Tick_IF;

typedef enum
{
  Ticks_1us = 0,
  Ticks_10us = 1,
  Ticks_100us = 2,
  Ticks_1ms = 3,
  Ticks_10ms = 4,
  Ticks_100ms = 5,
  Ticks_1000ms = 6
}Ticks_Ticks_t;

Ticks_Ticks_t Ticks_CurrentTickBase;

/*
 * @brief : Function to set the ticks of the base timer (Timer 4) and reset Timer 5.
 *
 * */

void Ticks_setTicks(Ticks_Ticks_t ticks);

/*
 * @brief : Function to reset the tick counter (Timer 5).
 *
 * */

void Ticks_resetCounter();

/*
 * @brief : Function to get the current number of execution ticks from Timer 5.
 *
 * */

uint32_t Ticks_getTicks();

uint32_t Ticks_getDeltaTick();

uint32_t Ticks_startCapture();

uint32_t Ticks_stopCapture();

/*
 *
 * @brief: Function to get the current timer tick in micro-seconds.
 *
 * */

uint32_t Ticks_getTime();

uint32_t Ticks_TicksToUs(uint32_t ticks);

void Ticks_enableInterrupt();

void Ticks_disableInterrupt();

void Tick_Handler();

#endif /* INC_Ticks_H_ */
